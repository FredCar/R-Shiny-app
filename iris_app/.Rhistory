diamonds %>%
ggplot()+
geom_line(aes(x=price , y=clarity))
# Graphiques ####
diamonds %>%
ggplot()+
geom_line(aes(x=price , y=table()))
# Graphiques ####
diamonds %>%
ggplot()+
geom_line(aes(x=price , y=table))
# Graphiques ####
diamonds %>%
ggplot()+
geom_line(aes(x=price , y=cut))
print(diamonds %>%
ggplot()+
geom_line(aes(x=price , y=col)))
# Graphiques ####
for (col in list_col){
print(diamonds %>%
ggplot()+
geom_line(aes(x=price , y=col)))
}
# Graphiques ####
for (col in list_col){
print(diamonds %>%
ggplot()+
geom_line(aes(x=price , y=col)))
}
diamonds %>%
ggplot()+
geom_line(aes(x=price , y=cut))
diamonds %>%
ggplot()+
geom_line(aes(x=cut , y=price))
diamonds %>%
ggplot()+
geom_line(aes(x=carat , y=price))
diamonds %>%
ggplot()+
geom_point(aes(x=carat , y=price))
diamonds %>%
ggplot()+
geom_point(aes(x=carat , y=price, color=clarity))
diamonds %>%
ggplot()+
geom_point(aes(x=carat , y=price, color=clarity))
diamonds %>%
ggplot()+
geom_point(aes(x=carat , y=price, color=clarity, size=table))
# Graphiques ####
for (col in list_col){
print(diamonds %>%
ggplot()+
geom_line(aes(x=price , y=col)))
}
diamonds %>%
ggplot()+
geom_point(aes(x=carat , y=price, color=clarity, size=table))
diamonds %>%
ggplot()+
geom_point(aes(x=cut , y=price, color=clarity, size=table))
diamonds %>%
ggplot()+
geom_point(aes(x=cut , y=price))
diamonds %>%
ggplot()+
geom_point(aes(x=table , y=price))
diamonds %>%
filter(table<70 & table>50) %>%
ggplot()+
geom_point(aes(x=table , y=price))
# Graphiques ####
for (col in list_col){
print(diamonds %>%
ggplot()+
geom_line(aes(x=col , y=col)))
}
for (col in list_col){
print(col)
print(summary(diamonds[[col]]))
print("--------------------------")
}
# Graphiques ####
for (col in list_col){
print(diamonds %>%
ggplot()+
geom_line(aes(x=[col] , y=price)))
}
# Graphiques ####
for (col in list_col){
print(diamonds %>%
ggplot()+
geom_line(aes(x=[[col]] , y=price)))
}
# Graphiques ####
for (col in list_col){
print(diamonds %>%
ggplot()+
geom_line(aes(x=col , y=price)))
}
for (col in list_col){
print(col)
print(summary(diamonds[[col]]))
print("--------------------------")
}
for (col in list_col){
print((col))
print(summary(diamonds[[col]]))
print("--------------------------")
}
for (col in list_col){
print(col)
print(summary(diamonds[[col]]))
print("--------------------------")
}
# Graphiques ####
for (col in list_col){
print(diamonds %>%
ggplot()+
geom_line(aes(x=diamonds[[col]] , y=price)))
}
# Graphiques ####
for (col in list_col){
print(diamonds %>%
ggplot()+
geom_point(aes(x=diamonds[[col]] , y=price)))
}
# Graphiques ####
for (col in list_col){
print(diamonds %>%
ggplot()+
geom_point(aes(x=diamonds[[col]] , y=price, color=cut)))+
labs(x=col)
}
# Graphiques ####
for (col in list_col){
print(diamonds %>%
ggplot()+
geom_point(aes(x=diamonds[[col]] , y=price, color=cut)))+
labs(title=col)
}
# Graphiques ####
for (col in list_col){
print(diamonds %>%
ggplot()+
geom_point(aes(x=diamonds[[col]] , y=price, color=cut)))+
labs(title="col")
}
# Graphiques ####
for (col in list_col){
print(diamonds %>%
ggplot()+
geom_point(aes(x=diamonds[[col]] , y=price, color=cut)))+
labs(x="col")
}
# Graphiques ####
for (col in list_col){
print(diamonds %>%
ggplot()+
geom_point(aes(x=diamonds[[col]] , y=price, color=cut))+
labs(x="col"))
}
print(diamonds %>%
ggplot()+
geom_point(aes(x=diamonds[[col]] , y=price, color=cut))+
labs(x=col, y=price))
# Graphiques ####
for (col in list_col){
print(diamonds %>%
ggplot()+
geom_point(aes(x=diamonds[[col]] , y=price, color=cut))+
labs(x=col))
}
# Import des données ####
library(tidyverse)
diamonds <- ggplot2::diamonds %>% mutate_if(is.factor, ~ factor(., ordered = FALSE))
# Stats descriptives ####
list_col <- colnames(diamonds)
for (col in list_col){
print(col)
print(summary(diamonds[[col]]))
print("--------------------------")
}
# Graphiques ####
for (col in list_col){
print(diamonds %>%
ggplot()+
geom_point(aes(x=diamonds[[col]] , y=price, color=cut))+
labs(x=col))
}
diamonds %>%
ggplot()+
geom_point(aes(x=carat , y=price, color=clarity, size=table))
diamonds %>%
filter(table<70 & table>50) %>%
ggplot()+
geom_point(aes(x=table , y=price))
View(diamonds)
View(diamonds)
diamonds %>%
filter(table<70 & table>50) %>%
ggplot()+
geom_point(aes(x=table , y=price))
install.packages("flexdashboard")
install.packages("shiny")
install.packages("DT")
install.packages("rpivotTable")
install.packages("plotly")
install.packages("openintro")
install.packages("highcharter")
install.packages("ggvis")
library(flexdashboard)
library(knitr)
library(DT)
library(rpivotTable)
library(ggplot2)
library(plotly)
library(dplyr)
library(openintro)
library(highcharter)
library(ggvis)
data <- read.csv("~/Desktop/data/VehicleFailure.csv")
data <- read.csv("~/Desktop/data/VehicleFailure.csv")
library(flexdashboard)
library(knitr)
library(DT)
library(rpivotTable)
library(ggplot2)
library(plotly)
library(dplyr)
library(openintro)
library(highcharter)
library(ggvis)
data <- read.csv("~/Desktop/data/VehicleFailure.csv")
mycolors <- c("blue", "#FFC125", "darkgreen", "darkorange")
mycolors <- c("blue", "#FFC125", "darkgreen", "darkorange")
valueBox(paste("Failure"),
color = "warning")
valueBox(length(data$State),
icon = "fa-user")
# Import des données ####
library(tidyverse)
# Import des données ####
library(tidyverse)
diamonds <- ggplot2::diamonds %>% mutate_if(is.factor, ~ factor(., ordered = FALSE))
# Stats descriptives ####
list_col <- colnames(diamonds)
for (col in list_col){
print(col)
print(summary(diamonds[[col]]))
print("--------------------------")
}
# Graphiques ####
diamonds %>%
ggplot(eas(x=carat))+
geom_histogram()
# Graphiques ####
diamonds %>%
ggplot(aes(x=carat))+
geom_histogram()
# Graphiques ####
diamonds %>%
ggplot(aes(x=carat))+
geom_histogram()+
ylim(5000)
# Graphiques ####
diamonds %>%
ggplot(aes(x=carat))+
geom_histogram()
diamonds %>%
ggplot(aes(x=carat))+
geom_bar()
diamonds %>%
ggplot(aes(x=carat))+
geom_color()
diamonds %>%
ggplot(aes(x=carat))+
geom_colorbar()
diamonds %>%
ggplot(aes(x=carat))+
geom_col()
diamonds %>%
hist(carat)
hist(diamonds$carat)
diamonds %>%
ggplot(aes(x=carat))+
geom_col()
diamonds %>%
ggplot(aes(x=carat))+
geom_line()
hist(diamonds$carat)
hist(diamonds$price)
# Graphiques ####
diamonds %>%
ggplot(aes(x=carat))+
geom_histogram()
hist(diamonds$carat)
hist(diamonds$carat, breaks=20, col="lightblue", border="pink")
hist(diamonds$carat, breaks=10, col="lightblue", border="pink")
hist(diamonds$carat, breaks=5, col="lightblue", border="pink")
hist(diamonds$carat, breaks=10, col="lightblue", border="pink")
hist(diamonds$carat, breaks=20, col="lightblue", border="pink")
hist(diamonds$carat, breaks=20, col="red", border="pink")
hist(diamonds$carat, breaks=20, col="blue1", border="pink")
hist(diamonds$carat, breaks=20, col="blue2", border="pink")
hist(diamonds$carat, breaks=20, col="blue3", border="pink")
hist(diamonds$carat, breaks=20, col="blue9", border="pink")
hist(diamonds$carat, breaks=20, col="blue", border="pink")
hist(diamonds$carat, breaks=20, col="blue", border="pink")
hist(diamonds$carat, breaks=20, col="blue", border="red")
hist(diamonds$carat, breaks=20, col="green", border="red")
hist(diamonds$price)
hist(diamonds$carat, breaks=20, border="red")
hist(diamonds$price)
hist(diamonds$cut)
hist(diamonds$cut)
hist(diamonds$depth)
hist(diamonds$table)
hist(diamonds$x)
hist(diamonds$y)
hist(diamonds$z)
hist(diamonds$carat, breaks=20, border="red")
hist(diamonds$price)
hist(diamonds$depth)
hist(diamonds$table)
hist(diamonds$x)
hist(diamonds$y)
hist(diamonds$z)
hist(diamonds$price)
hist(diamonds$carat, breaks=20, border="red")
for (col in list_col){
print(col)
print(summary(diamonds[[col]]))
print("--------------------------")
}
# Graphiques ####
diamonds %>%
ggplot(aes(x=carat))+
geom_histogram()
install.packages("rmdformats")
knit_with_parameters('~/Formation/Simplon/Exercisses/R/Projet P4 - R analyse donnees/Livrable (copie)/flights_markdown.Rmd')
pier(diamonds$cut)
pie(diamonds$cut)
diamonds %>%
group_by(cut) %>%
pie(cut)
diamonds %>%
group_by(cut) %>%
summarise(count=n()) %>%
pie(cut)
diamonds %>%
group_by(cut) %>%
summarise(count=n()) %>%
pie(count)
diamonds %>%
group_by(cut) %>%
summarise(count=n()) %>%
pie(count)
diamonds %>%
group_by(cut) %>%
summarise(count=n()) %>%
pie(count)
diamonds %>%
group_by(cut) %>%
summarise(count=n()) %>%
pie(count)
diamonds %>%
group_by(cut) %>%
summarise(nb=count(cut)) %>%
pie(nb)
View(diamonds)
diamonds %>%
group_by(cut) %>%
summarise(nb=count(cut)) %>%
select(nb)
diamonds %>%
group_by(cut) %>%
nb=count(cut) %>%
select(nb)
diamonds %>%
group_by(cut) %>%
nb=count(cut) %>%
select(nb)
diamonds$cut
count(diamonds$cut)
count(diamonds$cut)
for (col in list_col){
print(col)
print(summary(diamonds[[col]]))
print("--------------------------")
}
summary(diamonds$cut)
a <- summary(diamonds$cut)
a
pie(a)
pie(summary(diamonds$cut))
hist(diamonds$y)
pie(summary(diamonds$cut))
pie(summary(diamonds$color))
pie(summary(diamonds$color))
pie(summary(diamonds$clarity))
pie(summary(diamonds$cut), color="red")
pie(summary(diamonds$cut), col="red")
pie(summary(diamonds$cut), col="reds")
pie(summary(diamonds$cut), col="red")
pie(summary(diamonds$cut), col=c("purple", "violetred1", "green3", "cornsilk", "cyan", "white"))
pie(summary(diamonds$color), col=gray(seq(0.4, 1.0, length = 6)))
clarity
clarity
pie(summary(diamonds$clarity))
# Graphiques ####
diamonds %>%
ggplot(aes(x=carat))+
geom_histogram()
hist(diamonds$carat, breaks=20, border="red")
hist(diamonds$price)
hist(diamonds$depth)
hist(diamonds$table)
hist(diamonds$x)
hist(diamonds$y)
hist(diamonds$z)
pie(summary(diamonds$cut), col=c("purple", "violetred1", "green3", "cornsilk", "cyan", "white"))
pie(summary(diamonds$color), col=gray(seq(0.4, 1.0, length = 6)))
pie(summary(diamonds$clarity))
for (col in list_col){
print(diamonds %>%
ggplot()+
geom_point(aes(x=diamonds[[col]] , y=price, color=cut))+
labs(x=col))
}
diamonds %>%
ggplot()+
geom_point(aes(x=carat , y=price, color=clarity, size=table))
diamonds %>%
filter(table<70 & table>50) %>%
ggplot()+
geom_point(aes(x=table , y=price))
install.packages("shiny")
install.packages("shinythemes")
install.packages("tidyverse")
install.packages("tidyverse")
shiny::runApp('Formation/Simplon/Exercisses/R/RShiny/Shiny_test/test_app')
shiny::runApp('Formation/Simplon/Exercisses/R/Shiny_test/fff')
install.packages("tidyverse")
install.packages("libcurl")
install.packages("tidyverse")
install.packages("tidyverse", dependencies = FALSE)
install.packages("tidyverse")
remove.packages("tidyverse")
install.packages("tidyverse")
install.packages("tidyverse")
library(tidyverse)
install.packages("tidyverse")
library(ggplot2)
library(dplyr)
library(readr)
install.packages("shiny")
shiny::runApp('Formation/Simplon/Exercisses/R/RShiny/Shiny_test/test_app')
install.packages("shinythemes")
install.packages("shinythemes")
runApp('~/Formation/Simplon/Exercisses/R/RShiny/mini_app/mini_app')
runApp('Formation/Simplon/Exercisses/R/RShiny/Shiny_test/test_app')
iris <- read.csv("data.iris.csv")
iris
runApp('Formation/Simplon/Exercisses/R/RShiny/Shiny_test/test_app')
runApp('Formation/Simplon/Exercisses/R/RShiny/mini_app/mini_app')
iris <- read.csv("data/iris.csv")
iris
runApp('Formation/Simplon/Exercisses/R/RShiny/mini_app/mini_app')
iris <- read.csv("data/iris.csv")
iris
runApp('Formation/Simplon/Exercisses/R/RShiny/mini_app/mini_app')
runApp('Formation/Simplon/Exercisses/R/RShiny/mini_app/mini_app')
runApp('~/Formation/Simplon/Exercisses/R/RShiny/iris_app/iris_app')
}
server <- function(input, output){
}
server <- function(input, output){
}
runApp('Formation/Simplon/Exercisses/R/RShiny/iris_app/iris_app')
runApp('Formation/Simplon/Exercisses/R/RShiny/mini_app/mini_app')
runApp('Formation/Simplon/Exercisses/R/RShiny/iris_app/iris_app')
runApp('Formation/Simplon/Exercisses/R/RShiny/iris_app/iris_app')
iris <- read.csv("iris.csv")
iris
iris <- read.csv("iris.csv")
iris
plot(iris["Petal.Length"])
plot(iris["Petal.Length"], iris["Petal.Width"])
scatter(iris["Petal.Length"], iris["Petal.Width"])
runApp('Formation/Simplon/Exercisses/R/RShiny/iris_app/iris_app')
runApp('Formation/Simplon/Exercisses/R/RShiny/iris_app/iris_app')
plot(iris["Petal.Length"], iris["Petal.Width"])
plot(iris$Sepal.Length, iris$Sepal.Width)
plot(x = iris$Sepal.Length,
y = iris$Sepal.Width)
plot(x = iris$Sepal.Length,
y = iris$Sepal.Width,
col = iris$Species
)
library(dplyr)
iris <- read.csv("iris.csv")
iris
plot(x = iris$Sepal.Length,
y = iris$Sepal.Width,
col = iris$Species
)
iris_1 <- iris %>%
filter()
runApp('Formation/Simplon/Exercisses/R/RShiny/iris_app/iris_app')
